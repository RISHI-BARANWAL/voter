github push code.... 
git remote set-url origin https://github.com/SBS-TechSolution/Voter-Web-App.git 
git remote -v 
git push -u origin master 
git add . git commit -m "Your commit message" 
git push origin master git branch -r 
git checkout master 
git pull origin master 
git fetch origin 
git remote remove origin. // main cmd











git pull origin master.    (output is below) 
remote: Enumerating objects: 28, done. remote: Counting objects: 100% (28/28), done. 
remote: Compressing objects: 100% (14/14), done. remote: Total 22 (delta 6), reused 13 (delta 2), pack-reused 0 (from 0) Unpacking objects: 100% (22/22), 6.37 KiB | 141.00 KiB/s, done. 
From https://github.com/SBS-TechSolution/Voter-Web-App






Authority/ access/ authentication/ authorization
"Supervisor", "Karyakarta"
father_husband_name
"Super Admin", "Admin"
routes/users.js -185, 208, 150, 155-177(hirarchy), 101-116.  //
routes/notifications.js -12, 73, 93 //
routes/analytics.js -111 //
index.js -20 //
AuthContext.tsx -24 //
.env -11, 15 //
npm run build:prod
package.json -  
"scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
}










Er1Rishi or mongodb+srv://errishibaranwal:Er1Rishi@cluster0.pg11sta.mongodb.net/voter_management_db?retryWrites=true&w=majority&appName=Cluster0
# MongoDB Configuration
MONGODB_URI=mongodb+srv://david:1David123@cluster0.iflqqm2.mongodb.net/voter_management_db?retryWrites=true&w=majority&appName=Cluster0
DB_NAME=voter_management_db

# JWT Configuration
# JWT_SECRET=your_super_secret_jwt_key_here_change_in_production
JWT_SECRET=@mykeyrishi@2000!

# Server Configuration
PORT=5000
NODE_ENV=production
#development

# Vite Configuration
VITE_API_BASE_URL=http://localhost:5000/api
#https://thebyd.org/api
#http://localhost:5000/api 


# SMS Configuration (Optional)
SMS_API_KEY=your_sms_api_key_here
SMS_SENDER_ID=VOTER_SYS

# Email Configuration (Optional)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=your_email@gmail.com
EMAIL_PASS=your_app_password












server.js
// âœ… CORS Setup
const allowedOrigins = [
  "http://localhost:5173",         // local dev
  "https://thebyd.org",            // Hostinger deployed frontend
  "https://voter-phow.onrender.com" // just in case your frontend hits itself
];
https://voter-fssv.onrender.com

app.use(
  cors({
    origin: function (origin, callback) {
      if (!origin || allowedOrigins.includes(origin)) {
        callback(null, true);
      } else {
        callback(new Error("Not allowed by CORS: " + origin));
      }
    },
    credentials: true,
  })
);  //....new added


src/contexts/AuthContext.tsx, and .env
config/database.js, and .env
const mongoUri = process.env.MONGODB_URI || "mongodb+srv://david:1David123@cluster0.iflqqm2.mongodb.net/voter_management_db?retryWrites=true&w=majority&appName=Cluster0" || "mongodb://localhost:27017/voter_management_dbT";
.....

.env -> VITE_API_BASE_URL=https://voter-phow.onrender.com/api (frontend)
VITE_API_BASE_URL=http://localhost:5000/api  (backend)

AuthContext.tsx:-
const API_BASE_URL =  (import.meta.env.VITE_API_BASE_URL as string) || 'http://localhost:5000/api' || 'https://thebyd.org/api' || 'https://voter-phow.onrender.com/api'; //....new added. import.meta.env.VITE_API_BASE_URL ||



date:- 26/07/2025
Search for occupationFilter in pages/VoterManagement.tsx and routes/voter.js
pages/VoterManagement.tsx -1111 castes
npm run build
zip -r dist.zip dist/
git add .
git commit -m "add search and dropdown"
git push origin main


Selected Image,  part-2 :- 1231 image, fileInputRef, append, handleImageSelect, imagePreview , allowedTypes, submitData, selectedImage=imageFile, FormData = new FormData, type="file", castes
voter_image: null as File | null, {full_name : "Rss"}
VoterManagement.tsx:- 19 32, 139-141(selectedImage, voter_image), 303-307, 634-653(ImageIcon, axios.defaults.baseURL), 785-832,
{/* Image Upload Section */}
${axios.defaults.baseURL  }
<li>image</li>
setImagePreview(`${axios.defaults.baseURL || ''}${fullVoter.voter_image}`);
fileInputRef.current
setSelectedImage(null);
formData.append('voter_image', selectedImage); - 180

voters.js:-  16-45(img), 646-656(/upload-image)
config/database.js -16

voter_image , store the file name using formData voter_image in the mongodb and upload the image in server/upload with the original name + voterId if available , and also comment little description of the code


read 1st VoterManagement.tsx and voter.js, follow the same existing structure in my code VoterManagement.tsx and voter.js, and formData to save the image path or url , and the uplod of image is working in it.
then in voter_image , store the file name using formData voter_image in the mongodb and upload the image in server/upload with the original name + voterId if available , and also comment little description of the code